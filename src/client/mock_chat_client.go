// Code generated by mockery v1.0.0. DO NOT EDIT.

package client

import messages "github.com/kalensk/plusy/src/messages"
import mock "github.com/stretchr/testify/mock"

// MockChatClient is an autogenerated mock type for the MockChatClient type
type MockChatClient struct {
	mock.Mock
}

// GetUpdate provides a mock function with given fields: offset
func (_m *MockChatClient) GetUpdate(offset int64) messages.UpdateResponse {
	ret := _m.Called(offset)

	var r0 messages.UpdateResponse
	if rf, ok := ret.Get(0).(func(int64) messages.UpdateResponse); ok {
		r0 = rf(offset)
	} else {
		r0 = ret.Get(0).(messages.UpdateResponse)
	}

	return r0
}

// GetUpdates provides a mock function with given fields: timeout, offset
func (_m *MockChatClient) GetUpdates(timeout int, offset int64) messages.UpdateResponse {
	ret := _m.Called(timeout, offset)

	var r0 messages.UpdateResponse
	if rf, ok := ret.Get(0).(func(int, int64) messages.UpdateResponse); ok {
		r0 = rf(timeout, offset)
	} else {
		r0 = ret.Get(0).(messages.UpdateResponse)
	}

	return r0
}

// ProcessCommand provides a mock function with given fields: message, cmdPosition
func (_m *MockChatClient) ProcessCommand(message *messages.Message, cmdPosition int) {
	_m.Called(message, cmdPosition)
}

// SendPlusOneAckMessage provides a mock function with given fields: chatId, userFirstName, currentCount
func (_m *MockChatClient) SendPlusOneAckMessage(chatId int64, userFirstName string, currentCount string) {
	_m.Called(chatId, userFirstName, currentCount)
}
